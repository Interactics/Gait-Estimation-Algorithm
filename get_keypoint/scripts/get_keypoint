#!/usr/bin/env python
import roslib
import rospy
import numpy as np
import cv2
from cv_bridge import CvBridge, CvBridgeError
from sensor_msgs.msg import Image
from openpose_ros_msgs.msg import OpenPoseHumanList
from openpose_ros_msgs.msg import PointWithProb
from openpose_ros_msgs.msg import OpenPoseHuman
from openpose_ros_msgs.msg import BoundingBox

global height
global width
global keypointList

def callback1(data) :
    keypointList = data.human_list[0].body_key_points_with_prob

def callback2(img_msg) :
    img = msg_to_numpy(img_msg)
    img_np = np.asarray(img)
    depth_colormap = cv2.applyColorMap(cv2.convertScaleAbs(img_np, alpha = 0.03), cv2.COLORMAP_JET)
    cv2.imshow('rs', depth_colormap)
    print(img_np[200][200])
    print("test")
    cv2.waitKey(1)


def get_keypoint() :
    rospy.init_node('get_keypoint', anonymous = False)
    rospy.Subscriber("/openpose_ros/human_list", OpenPoseHumanList,callback1)
    rospy.Subscriber("depth_image", Image, callback2)
    rospy.spin()

def msg_to_numpy(data):
        bridge = CvBridge()
        try:
            raw_img = bridge.imgmsg_to_cv2(data, "16UC1")
        except CvBridgeError as err:
            print("err")

        return raw_img 


if __name__ == '__main__' :
    get_keypoint()